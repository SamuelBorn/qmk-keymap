# WARNING: This file was generated by an AI. Review and test carefully.
#
# .github/workflows/keymap.yml

name: Generate Keymap SVG

# This action now runs on pushes to the 'main' branch, but ONLY if
# the 'keymaps/default/keymap.c' file was changed.
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'keymaps/default/keymap.c'

jobs:
  generate-svg:
    # Use the latest version of Ubuntu as the runner
    runs-on: ubuntu-latest

    # Add this permissions block to allow the action to commit back to the repo
    permissions:
      contents: write

    steps:
      # Step 1: Check out your repository code
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Set up Python, which is needed for 'qmk' and 'keymap-drawer'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 3: Install the required Python packages
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install qmk keymap-drawer

      # Step 4: Set up the full QMK build environment.
      # This clones qmk_firmware to /home/runner/qmk_firmware
      - name: Set up QMK
        run: |
          qmk setup --yes
          # Copy the udev rules required for some QMK hardware operations.
          sudo cp /home/runner/qmk_firmware/util/udev/50-qmk.rules /etc/udev/rules.d/

      # Step 5: Link repository and generate keymap visualization
      - name: Generate keymap visualization
        run: |
          # Create a symbolic link from the checked-out repo ($GITHUB_WORKSPACE)
          # to where QMK expects to find keyboards. This lets us use '-kb totem'.
          # We are assuming your keyboard name is 'totem'.
          ln -s "$GITHUB_WORKSPACE" /home/runner/qmk_firmware/keyboards/totem

          # Ensure the output directory exists in your repository
          mkdir -p visualize

          # Generate the visualization using the keyboard and keymap names.
          # We assume your keymap name is 'default'.
          qmk c2json -kb totem -km default | keymap -c visualize/keymap-drawer-config.yaml parse -c 12 -q - > visualize/keymap.yaml
          keymap -c visualize/keymap-drawer-config.yaml draw visualize/keymap.yaml > visualize/keymap.svg

      # Step 6: Commit the newly generated keymap.svg back to your repository
      - name: Commit updated SVG
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs: Auto-generate keymap.svg"
          # Specify the exact file to commit
          file_pattern: visualize/keymap.svg
          # Use the standard GitHub Actions bot as the author
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
